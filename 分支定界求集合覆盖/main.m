clear global;
clear;
clc;

% 距离
distance=[0	1.6	2.3	9 18.2	20	21.1	19.5	9.4	17.8	24.1	29.2;
        1.6	0 3.8 9.2 18.4	19	21.3	19.6	10.1	17.9	24.2	29.4;
        2.3	3.8	0	10.2	19.3	21.6	22.3	16.9	7.6	18.9	25.3	26.7;
        9	9.2	10.2	0	9.7	10.4	12.7	22.4	17.4	20.5	27.3	35.2;
        18.2	18.4	19.3	9.7	0	9.2	18.9	28.8	28.3	26.9	38.6	38.6;
        20	19	21.6	10.4	9.2	0	9.7	26.7	27.1	24.2	29.4	36.5;
        21.1	21.3	22.3	12.7	18.9	9.7	0	25.9	27	17.1	22.3	37.3;
        19.5	19.6	16.9	22.4	28.8	26.7	25.9	0	14.2	9.7	5.8	10.5;
        9.4	10.1	7.6	17.4	28.3	27.1	27	14.2	0	22.3	21.5	25.6;
        17.8	17.9	18.9	20.5	26.9	24.2	17.1	9.7	22.3	0	7.9	20.4;
        24.1	24.2	25.3	27.3	38.6	29.4	22.3	5.8	21.5	7.9	0	14.7;
        29.2	29.4	26.7	35.2	38.6	36.5	37.3	10.5	25.6	20.4	14.7	0];
M=200;
F=[96.7 93.4 94.8 86.7 91.6 90.3 84.2 91.4 83 82.7 82.5 78.5];
C=M-F;
r=12; % 最大服务半径
num=length(distance); % 农居点个数
service=zeros(size(distance)); %aij
service(distance<r)=1;
b=ones(num,1);
lb=zeros(num,1);
ub=ones(num,1);

global result; % 存储解
global lowerBound; % 下界
global upperBound; % 上界
global count; % 用以判断是否为第一次分支

count = 1;

BinTree = createBinTreeNode({F,service*-1,b*-1,[],[],lb,ub});
if ~isempty(result)
    [fval,flag]=min(result(:,end)); % result中每一行对应一个解及对应的函数值
    Result=result(flag,:);
    disp('该问题的最优解为：');
    disp(Result(1,1:end-1));
    disp('设施点为：');
    disp(find(Result(1,1:end-1) == 1));
    disp('最优成本为：');
    disp(Result(1,end));
else
    disp('问题无解！！！');
end
