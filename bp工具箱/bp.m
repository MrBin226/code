% clc;
% clear;
% close all;
% 这是输入数据
x = -1:0.1:1; 
% 这是输出数据
y = [-0.9602,-0.577,-0.0729,0.3771,0.6405,0.66,0.4609,0.1336,-0.2013,-0.4344,...
    -0.5,-0.393,-0.1647,0.0988,0.3072,0.396,0.3449,0.1816,-0.0132,-0.2189,-0.3201];

% net = newff(minmax(x),[10,1],{'tansig','purelin'},'trainlm');
% net.trainParam.epochs=50;
% net.trainParam.goal=0;
% net.trainParam.lr=0.01;
% net=train(net,x,y);
% y2=sim(net,x);
% plot(x,y,'o',x,y2,'-');
% 1、打开netrual net fitting这个工具箱
% 2、选择输入数据和目标数据
% 可以选择数据文件，也可以选择工作区的变量
% 因为本例中没有数据文件，所以我们选择手动输入
% 现在数据已经加载到工作区了
% 我们可以选择数据了
% 75% 代表训练数据为75%，
% 验证数据为15%
% 测试数据为15%
% 一般选取默认的值即可
% 这个10是隐藏层的神经元个数，10，工具箱会自动有一个默认值，本例选择默认个数即可
% 这个下拉选择框是选择训练算法，即模型训练时，选择什么算法来更新，一般选择默认即可
% 然后点击train开始进行模型的训练
% 训练结束后就会弹出另一个对话框

% 该对话框可以看到模型训练和测试的一个结果
% 因为模型默认的选择了使用均方差作为模型损失函数
% 该图代表的是模型在每一次训练过程中其训练数据，验证数据，测试数据的均方误差
% 均方误差越小，代表模型的拟合程度越好
% 此时我们点第三个按钮，可以看到模型的回归曲线，R代表模型的拟合程度，R越接近于1，表示模型的拟合程度越好
% 这个对话框里有4个图形，分别是训练数据，验证数据，测试数据，总体数据的拟合曲线
% 可以看到除了在测试数据上的拟合效果不是特别好，在训练数据，验证数据，和总体数据上的拟合程度都达到了90以上，由此也可以说明模型还可以进行调整相关参数进行改进
% 像我刚刚说的，如果模型的效果不好，可以再次进行参数调整
% 然后如果要保存模型的话，可以对模型进行保存，以便下次直接进行使用
% 此时模型已进行了保存
% 可以看到此时模型已经保存到了工作区
% 我们可以再将模型保存为mat文件,使用save方法
% 可以看到我们已经保存得到了results.mat文件了
% 下次如果我们要再次使用模型时，只需要导入该模型，进行输出即可
% 使用load方法导入模型,可以看到模型已经加载到了工作区
% 假设我们输入0.5，使用训练好的模型，得到输出
% 使用sim函数
% 可以看到，此时已经得到了输出,这个输出就是输入经过模型，得到的输出结果







